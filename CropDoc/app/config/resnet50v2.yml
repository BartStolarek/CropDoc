

pipeline:
  python_file:
  dataset_path:
  output_dir:
model:
  name: ResNet50
  type: Classification
  architecture:
    - type: ResNet
    - layers: 50
    - type_of_layers: 1x1
    - size_of_layers: 3
    - activation_functions: ReLU
    - input_output_dimensions: 224x224x3
  training:
    epochs: 10
    cv_folds: 10
    batch_size: 32
    learning_rate: 0.001
    optimiser: # List of optimiser algorithms can be found here: https://pytorch.org/docs/stable/optim.html
      type: Adam
      params:
        lr: 0.001
        weight_decay: 0.0001
    loss_function: # List of loss functions can be found here: https://pytorch.org/docs/stable/nn.html#loss-functions  
      type: CrossEntropyLoss
      params:
  data:
    transformers: # List of data transformers can be found here: https://pytorch.org/vision/0.9/transforms.html
      train:
        - type: RandomResizedCrop
          size: 224
        - type: RandomHorizontalFlip
        - type: ColorJitter
          brightness: 0.2
          contrast: 0.2
          saturation: 0.2
          hue: 0.1
        - type: RandomRotation
          degrees: 20
        - type: RandomAffine
          degrees: 0
          translate: [0.1, 0.1]
        - type: ToTensor
        - type: Normalize
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
      val:
        - type: Resize
          size: 256
        - type: CenterCrop
          size: 224
        - type: ToTensor
        - type: Normalize
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
      test:
        - type: Resize
          size: 256
        - type: CenterCrop
          size: 224
        - type: ToTensor
        - type: Normalize
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]   
  evaluation:
    metrics:
      - accuracy
      - precision
      - recall
    batch_size: 64

